---
loader: taskgraph.loader.transform:loader

transforms:
  - src.transforms:taskcluster_image_versions
  - src.transforms:add_task_env
  - taskgraph.transforms.run
  - taskgraph.transforms.task

task-defaults:
  worker-type: ubuntu-24-04
  run:
    using: bare
  worker:
    max-run-time: 600
    taskcluster-proxy: true
    chain-of-trust: true
  scopes:
    - secrets:get:project/taskcluster/testing/client-libraries

tasks:
  nodejs:
    description: nodejs client tests
    worker:
      docker-image: {in-tree: ci}
    run:
      command: >-
        {{ corepack yarn --immutable &> /dev/null || exit 99; }} &&
        eval $(python3 test/client-library-secrets.py) &&
        cd clients/client &&
        {{ corepack yarn --immutable &> /dev/null || exit 99; }} &&
        corepack yarn test &&
        corepack yarn package-test
  nodejs-client-external-test:
    description: nodejs client external tests
    worker:
      docker-image: {in-tree: ci}
    run:
      command: >-
        {{ corepack yarn --immutable &> /dev/null || exit 99; }} &&
        eval $(python3 test/client-library-secrets.py) &&
        cd clients/client-test &&
        {{ corepack yarn --immutable &> /dev/null || exit 99; }} &&
        corepack yarn test
  go:
    description: golang client tests
    worker:
      docker-image: {in-tree: ci}
    run:
      command: >-
        eval $(python3 test/client-library-secrets.py) &&
        cd clients/client-go &&
        go test -v -race ./...
  shell:
    description: cli tests
    worker:
      docker-image: {in-tree: ci}
    run:
      command: >-
        eval $(python3 test/client-library-secrets.py) &&
        cd clients/client-shell &&
        go test -v -race ./...
  web:
    description: web js tests
    worker:
      docker-image: {in-tree: browser-test}
    run:
      command: >-
        {{ corepack yarn --immutable &> /dev/null || exit 99; }} &&
        cd clients/client-web &&
        {{ corepack yarn --immutable &> /dev/null || exit 99; }} &&
        {{ Xvfb :99 -screen 0 640x480x8 -nolisten tcp & }} &&
        sleep 2 &&
        CHROME_BIN=firefox DISPLAY=:99 corepack yarn test
  py39:
    description: python3.9 client tests
    worker:
      docker-image: ghcr.io/astral-sh/uv:python3.9-alpine
    run:
      command: >-
        eval $(python test/client-library-secrets.py) &&
        cd clients/client-py &&
        TOXENV=py39 uvx tox
  py310:
    description: python3.10 client tests
    worker:
      docker-image: ghcr.io/astral-sh/uv:python3.10-alpine
    run:
      command: >-
        eval $(python test/client-library-secrets.py) &&
        cd clients/client-py &&
        TOXENV=py310 uvx tox
  py311:
    description: python3.11 client tests
    worker:
      docker-image: ghcr.io/astral-sh/uv:python3.11-alpine
    run:
      command: >-
        eval $(python test/client-library-secrets.py) &&
        cd clients/client-py &&
        TOXENV=py311 uvx tox
  py312:
    description: python3.12 client tests
    worker:
      docker-image: ghcr.io/astral-sh/uv:python3.12-alpine
    run:
      command: >-
        eval $(python test/client-library-secrets.py) &&
        cd clients/client-py &&
        TOXENV=py312 uvx tox
  py313:
    description: python3.13 client tests
    worker:
      docker-image: ghcr.io/astral-sh/uv:python3.13-alpine
    run:
      command: >-
        eval $(python test/client-library-secrets.py) &&
        cd clients/client-py &&
        TOXENV=py313 uvx tox
  rust:
    description: rust client tests
    worker:
      docker-image: rust:{rust_version}
    run:
      command: >-
        eval $(python3 test/client-library-secrets.py) &&
        cd clients/client-rust &&
        cargo test &&
        cargo build --release &&
        rustup component add rustfmt &&
        cargo fmt &&
        if ! output=$(git status --porcelain) || [ -n "$output" ]; then
            echo "*** cargo fmt produced changes to the repository; these changes should be checked in ***";
            git --no-pager diff;
            exit 1;
        fi
