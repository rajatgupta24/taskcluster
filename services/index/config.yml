defaults:
  app:
    # Route prefix used to form custom routes on the form
    #  'route.<routePrefix>.<namespace>'
    routePrefix: 'index'

    # Name of pulse queue, if a non-exclusive queue is to be used.
    listenerQueueName: 'index/incoming-tasks2'

    # Time delay before expiring artifacts, in readable format, see:
    # taskcluster.fromNow, notice this should be negative!
    expirationDelay: '-1 day'

  postgres:
    readDbUrl: !env:secret READ_DB_URL
    writeDbUrl: !env:secret WRITE_DB_URL

  monitoring:
    level: !env:optional LEVEL
    errorConfig: !env:json:secret:optional ERROR_CONFIG
    prometheusConfig: !env:json:optional PROMETHEUS_CONFIG

  # Server configuration
  server:
    # Port to listen for requests on
    port: !env:number PORT

    # Environment 'development' or 'production'
    env: !env NODE_ENV

    forceSSL: !env:bool FORCE_SSL
    trustProxy: !env:bool TRUST_PROXY

    # This is required to be larger than the downstream proxy timeout, default: 90s
    keepAliveTimeoutSeconds: !env:number:optional KEEP_ALIVE_TIMEOUT_SECONDS

  # Configuration of access to other taskcluster components
  taskcluster:
    # Taskcluster credentials for this server, these must have scopes:
    # auth:credentials, queue:*
    # (typically configured using environment variables)
    rootUrl: !env TASKCLUSTER_ROOT_URL
    credentials:
      clientId: !env TASKCLUSTER_CLIENT_ID
      accessToken: !env:secret TASKCLUSTER_ACCESS_TOKEN

  # Pulse
  pulse:
    hostname: !env PULSE_HOSTNAME
    username: !env:secret PULSE_USERNAME
    password: !env:secret PULSE_PASSWORD
    vhost: !env PULSE_VHOST
    amqps: !env:bool:optional PULSE_AMQPS
    namespace: taskcluster-index

  # new relic config (processed in services/prelude.js)
  newRelic: !env:json:secret:optional NEW_RELIC

test:
  taskcluster:
    rootUrl: "https://tc.example.com"
  app:
    listenerQueueName: 'test-queue'

  server:
    port: 60020
    env: development
    forceSSL: false
    trustProxy: false

  aws:
    region: 'us-west-2'

  pulse:
    namespace: 'taskcluster-fake'
