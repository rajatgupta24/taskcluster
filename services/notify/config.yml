defaults:
  app:
    sourceEmail:                  !env EMAIL_SOURCE_ADDRESS
    routePrefix:                  notify
    # Rate limits for email: maximum average rate of count/time
    # 50 per 10 minute is a reasonable default: someone with an exploding
    # taskgraph will get 50 messages, and will be able to get another 50
    # when they try again after 10 minutes.
    maxMessageCount:              50
    maxMessageTime:               600
    # Email address to blacklist, useful to mitigate temporary misuse
    emailBlacklist:               !env:json:optional EMAIL_BLACKLIST
    # ignore tasks with reasonResolved matching something in this list
    ignoreTaskReasonResolved:
        - canceled
        - deadline-exceeded

  taskcluster:
    rootUrl:          !env TASKCLUSTER_ROOT_URL
    credentials:
      clientId:       !env TASKCLUSTER_CLIENT_ID
      accessToken:    !env:secret TASKCLUSTER_ACCESS_TOKEN

  postgres:
    readDbUrl:                    !env:secret READ_DB_URL
    writeDbUrl:                   !env:secret WRITE_DB_URL

  monitoring:
    level: !env:optional LEVEL
    errorConfig: !env:json:secret:optional ERROR_CONFIG
    prometheusConfig: !env:json:optional PROMETHEUS_CONFIG

  server:
    port:             !env:number PORT
    env:              !env NODE_ENV
    forceSSL:         !env:bool FORCE_SSL
    trustProxy:       !env:bool TRUST_PROXY
    # This is required to be larger than the downstream proxy timeout, default: 90s
    keepAliveTimeoutSeconds: !env:number:optional KEEP_ALIVE_TIMEOUT_SECONDS

  aws:
    accessKeyId:      !env:secret AWS_ACCESS_KEY_ID
    secretAccessKey:  !env:secret AWS_SECRET_ACCESS_KEY
    region:           !env:optional AWS_REGION

  pulse:
    hostname: !env PULSE_HOSTNAME
    username: !env:secret PULSE_USERNAME
    password: !env:secret PULSE_PASSWORD
    vhost: !env PULSE_VHOST
    amqps: !env:bool:optional PULSE_AMQPS
    namespace: taskcluster-notify

  matrix:
    baseUrl: !env:optional MATRIX_BASE_URL
    accessToken: !env:secret:optional MATRIX_ACCESS_TOKEN
    userId: !env:optional MATRIX_USER_ID

  slack:
    apiUrl:      !env:optional SLACK_API_URL
    accessToken: !env:secret:optional SLACK_ACCESS_TOKEN

  # new relic config (processed in services/prelude.js)
  newRelic: !env:json:secret:optional NEW_RELIC

# Configuration of tests
test:
  taskcluster:
    rootUrl: "https://tc.example.com"
  aws:
    region:           us-east-1
  app:
    sourceEmail: '"Taskcluster Notify Testing" <taskcluster-noreply-testing@mozilla.com>'
    routePrefix: test-notify
    emailBlacklist: []
  server:
    port:             60401
    env:              development
    forceSSL:         false
    trustProxy:       true
