---
defaults:
  app:
    exchangePrefix:              'v1/'
    cachePurgeExpirationDelay:   '- 1 hour'
    cacheTime:                   10

  monitoring:
    level: !env:optional LEVEL
    errorConfig: !env:json:secret:optional ERROR_CONFIG
    prometheusConfig: !env:json:optional PROMETHEUS_CONFIG

  server:
    # Port to listen for requests on
    port:                           !env:number PORT

    # Environment 'development' or 'production'
    env:                            !env NODE_ENV

    # Force SSL not useful when runnning locally
    forceSSL:                       !env:bool FORCE_SSL

    # Trust a forwarding proxy
    trustProxy:                     !env:bool TRUST_PROXY

    # This is required to be larger than the downstream proxy timeout, default: 90s
    keepAliveTimeoutSeconds:        !env:number:optional KEEP_ALIVE_TIMEOUT_SECONDS

  postgres:
    readDbUrl:  !env:secret READ_DB_URL
    writeDbUrl: !env:secret WRITE_DB_URL

  taskcluster:
    rootUrl:                      !env TASKCLUSTER_ROOT_URL
    credentials:
      clientId:                   !env TASKCLUSTER_CLIENT_ID
      accessToken:                !env:secret TASKCLUSTER_ACCESS_TOKEN

  # new relic config (processed in services/prelude.js)
  newRelic: !env:json:secret:optional NEW_RELIC

test:
  taskcluster:
    rootUrl: "https://tc.example.com"

  app:
    cachePurgeExpirationDelay:   '7 days'
    cacheTime:                   300    # safely long enough to finish a test

  server:
    port:                         60415
    forceSSL:                     false
    trustProxy:                   true
    env: development
